// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.apollographqltutorial

import com.apollographql.apollo.api.Operation
import com.apollographql.apollo.api.OperationName
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.Response
import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.ScalarTypeAdapters
import com.apollographql.apollo.api.ScalarTypeAdapters.Companion.DEFAULT
import com.apollographql.apollo.api.`internal`.OperationRequestBodyComposer
import com.apollographql.apollo.api.`internal`.QueryDocumentMinifier
import com.apollographql.apollo.api.`internal`.ResponseFieldMapper
import com.apollographql.apollo.api.`internal`.ResponseFieldMarshaller
import com.apollographql.apollo.api.`internal`.ResponseReader
import com.apollographql.apollo.api.`internal`.SimpleOperationResponseParser
import com.apollographql.apollo.api.`internal`.Throws
import com.example.apollographqltutorial.type.CustomType
import kotlin.Any
import kotlin.Array
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import okio.Buffer
import okio.BufferedSource
import okio.ByteString
import okio.IOException

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter")
public class SpaceLaunchesListQuery : Query<SpaceLaunchesListQuery.Data,
    SpaceLaunchesListQuery.Data, Operation.Variables> {
  public override fun operationId(): String = OPERATION_ID

  public override fun queryDocument(): String = QUERY_DOCUMENT

  public override fun wrapData(`data`: Data?): Data? = data

  public override fun variables(): Operation.Variables = Operation.EMPTY_VARIABLES

  public override fun name(): OperationName = OPERATION_NAME

  public override fun responseFieldMapper(): ResponseFieldMapper<Data> =
      ResponseFieldMapper.invoke {
    Data(it)
  }

  @Throws(IOException::class)
  public override fun parse(source: BufferedSource, scalarTypeAdapters: ScalarTypeAdapters):
      Response<Data> = SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters)

  @Throws(IOException::class)
  public override fun parse(byteString: ByteString, scalarTypeAdapters: ScalarTypeAdapters):
      Response<Data> = parse(Buffer().write(byteString), scalarTypeAdapters)

  @Throws(IOException::class)
  public override fun parse(source: BufferedSource): Response<Data> = parse(source, DEFAULT)

  @Throws(IOException::class)
  public override fun parse(byteString: ByteString): Response<Data> = parse(byteString, DEFAULT)

  public override fun composeRequestBody(scalarTypeAdapters: ScalarTypeAdapters): ByteString =
      OperationRequestBodyComposer.compose(
    operation = this,
    autoPersistQueries = false,
    withQueryDocument = true,
    scalarTypeAdapters = scalarTypeAdapters
  )

  public override fun composeRequestBody(): ByteString = OperationRequestBodyComposer.compose(
    operation = this,
    autoPersistQueries = false,
    withQueryDocument = true,
    scalarTypeAdapters = DEFAULT
  )

  public override fun composeRequestBody(
    autoPersistQueries: Boolean,
    withQueryDocument: Boolean,
    scalarTypeAdapters: ScalarTypeAdapters
  ): ByteString = OperationRequestBodyComposer.compose(
    operation = this,
    autoPersistQueries = autoPersistQueries,
    withQueryDocument = withQueryDocument,
    scalarTypeAdapters = scalarTypeAdapters
  )

  public data class Links(
    public val __typename: String = "LaunchLinks",
    public val mission_patch: String?
  ) {
    public fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->
      writer.writeString(RESPONSE_FIELDS[0], this@Links.__typename)
      writer.writeString(RESPONSE_FIELDS[1], this@Links.mission_patch)
    }

    public companion object {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField.forString("__typename", "__typename", null, false, null),
          ResponseField.forString("mission_patch", "mission_patch", null, true, null)
          )

      public operator fun invoke(reader: ResponseReader): Links = reader.run {
        val __typename = readString(RESPONSE_FIELDS[0])!!
        val mission_patch = readString(RESPONSE_FIELDS[1])
        Links(
          __typename = __typename,
          mission_patch = mission_patch
        )
      }

      @Suppress("FunctionName")
      public fun Mapper(): ResponseFieldMapper<Links> = ResponseFieldMapper { invoke(it) }
    }
  }

  public data class LaunchesPast(
    public val __typename: String = "Launch",
    public val mission_name: String?,
    public val launch_date_local: Any?,
    public val links: Links?,
    public val id: String?
  ) {
    public fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->
      writer.writeString(RESPONSE_FIELDS[0], this@LaunchesPast.__typename)
      writer.writeString(RESPONSE_FIELDS[1], this@LaunchesPast.mission_name)
      writer.writeCustom(RESPONSE_FIELDS[2] as ResponseField.CustomTypeField,
          this@LaunchesPast.launch_date_local)
      writer.writeObject(RESPONSE_FIELDS[3], this@LaunchesPast.links?.marshaller())
      writer.writeCustom(RESPONSE_FIELDS[4] as ResponseField.CustomTypeField, this@LaunchesPast.id)
    }

    public companion object {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField.forString("__typename", "__typename", null, false, null),
          ResponseField.forString("mission_name", "mission_name", null, true, null),
          ResponseField.forCustomType("launch_date_local", "launch_date_local", null, true,
              CustomType.DATE, null),
          ResponseField.forObject("links", "links", null, true, null),
          ResponseField.forCustomType("id", "id", null, true, CustomType.ID, null)
          )

      public operator fun invoke(reader: ResponseReader): LaunchesPast = reader.run {
        val __typename = readString(RESPONSE_FIELDS[0])!!
        val mission_name = readString(RESPONSE_FIELDS[1])
        val launch_date_local = readCustomType<Any>(RESPONSE_FIELDS[2] as
            ResponseField.CustomTypeField)
        val links = readObject<Links>(RESPONSE_FIELDS[3]) { reader ->
          Links(reader)
        }
        val id = readCustomType<String>(RESPONSE_FIELDS[4] as ResponseField.CustomTypeField)
        LaunchesPast(
          __typename = __typename,
          mission_name = mission_name,
          launch_date_local = launch_date_local,
          links = links,
          id = id
        )
      }

      @Suppress("FunctionName")
      public fun Mapper(): ResponseFieldMapper<LaunchesPast> = ResponseFieldMapper { invoke(it) }
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public data class Data(
    public val launchesPast: List<LaunchesPast?>?
  ) : Operation.Data {
    public override fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke {
        writer ->
      writer.writeList(RESPONSE_FIELDS[0], this@Data.launchesPast) { value, listItemWriter ->
        value?.forEach { value ->
          listItemWriter.writeObject(value?.marshaller())}
      }
    }

    public companion object {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField.forList("launchesPast", "launchesPast", mapOf<String, Any?>(
            "limit" to "10"), true, null)
          )

      public operator fun invoke(reader: ResponseReader): Data = reader.run {
        val launchesPast = readList<LaunchesPast>(RESPONSE_FIELDS[0]) { reader ->
          reader.readObject<LaunchesPast> { reader ->
            LaunchesPast(reader)
          }
        }
        Data(
          launchesPast = launchesPast
        )
      }

      @Suppress("FunctionName")
      public fun Mapper(): ResponseFieldMapper<Data> = ResponseFieldMapper { invoke(it) }
    }
  }

  public companion object {
    public const val OPERATION_ID: String =
        "9463d51829b6a997e04c8f688b7c547b24b037804146156e09e6757bf3b847aa"

    public val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query SpaceLaunchesList {
          |  launchesPast(limit: 10) {
          |    __typename
          |    mission_name
          |    launch_date_local
          |    links {
          |      __typename
          |      mission_patch
          |    }
          |    id
          |  }
          |}
          """.trimMargin()
        )

    public val OPERATION_NAME: OperationName = object : OperationName {
      public override fun name(): String = "SpaceLaunchesList"
    }
  }
}
