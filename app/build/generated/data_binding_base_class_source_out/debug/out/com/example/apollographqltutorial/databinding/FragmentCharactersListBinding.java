// Generated by view binder compiler. Do not edit!
package com.example.apollographqltutorial.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.apollographqltutorial.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCharactersListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView charactersEmptyText;

  @NonNull
  public final ProgressBar charactersFetchProgress;

  @NonNull
  public final RecyclerView charactersRv;

  private FragmentCharactersListBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView charactersEmptyText, @NonNull ProgressBar charactersFetchProgress,
      @NonNull RecyclerView charactersRv) {
    this.rootView = rootView;
    this.charactersEmptyText = charactersEmptyText;
    this.charactersFetchProgress = charactersFetchProgress;
    this.charactersRv = charactersRv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCharactersListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCharactersListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_characters_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCharactersListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.characters_empty_text;
      TextView charactersEmptyText = rootView.findViewById(id);
      if (charactersEmptyText == null) {
        break missingId;
      }

      id = R.id.characters_fetch_progress;
      ProgressBar charactersFetchProgress = rootView.findViewById(id);
      if (charactersFetchProgress == null) {
        break missingId;
      }

      id = R.id.characters_rv;
      RecyclerView charactersRv = rootView.findViewById(id);
      if (charactersRv == null) {
        break missingId;
      }

      return new FragmentCharactersListBinding((ConstraintLayout) rootView, charactersEmptyText,
          charactersFetchProgress, charactersRv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
